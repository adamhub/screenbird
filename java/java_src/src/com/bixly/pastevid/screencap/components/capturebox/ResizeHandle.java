/*
 * ResizeHandle.java
 *
 * Version 1.0
 * 
 * 16 May 2013
 */
package com.bixly.pastevid.screencap.components.capturebox;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JWindow;

/**
 * Corner handles of the CaptureBox for resizing the recording area.
 * @author jjmon_000
 */
public class ResizeHandle extends JWindow implements MouseListener {
    /**
     * An enumerated type for the different locations of a ResizeHandle.
     */
    public enum Location {
        NORTHWEST,
        NORTHEAST,
        SOUTHWEST,
        SOUTHEAST
    }
    
    private static final Color STROKE_COLOR = Color.DARK_GRAY;
    private ResizeHandle.Location boxLocation;
    
    /**
     * Creates new form ResizeHandle.
     */
    public ResizeHandle(ResizeHandle.Location boxLocation) {
        this.boxLocation = boxLocation;
        initComponents();
        this.getContentPane().setBackground(new Color(0, 0, 0, 0));
        this.addMouseListener(this);
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        
        Graphics2D g2d = (Graphics2D)this.getGraphics();
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        
        g2d.setColor(Color.white);
        g2d.fillOval(0, 0, this.getWidth() - 1, this.getHeight() - 1);
        g2d.setColor(STROKE_COLOR);
        g2d.drawOval(0, 0, this.getWidth() - 1, this.getHeight() - 1);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setAlwaysOnTop(true);
        setBackground(new Color(0, 0, 0, 0));
        setFocusCycleRoot(false);
        setFocusable(false);
        setFocusableWindowState(false);
        setMaximumSize(new java.awt.Dimension(15, 15));
        setMinimumSize(new java.awt.Dimension(15, 15));
        setPreferredSize(new java.awt.Dimension(15, 15));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void mouseClicked(MouseEvent e) {
    }

    public void mousePressed(MouseEvent e) {
    }

    public void mouseReleased(MouseEvent e) {
    }

    public void mouseEntered(MouseEvent e) {
        // Change cursor on hover depending on location of ResizeHandle
        switch(this.boxLocation){
            case NORTHWEST:
                this.getRootPane().setCursor(Cursor.getPredefinedCursor(Cursor.NW_RESIZE_CURSOR));
                break;
            case NORTHEAST:
                this.getRootPane().setCursor(Cursor.getPredefinedCursor(Cursor.NE_RESIZE_CURSOR));
                break;
            case SOUTHWEST:
                this.getRootPane().setCursor(Cursor.getPredefinedCursor(Cursor.SW_RESIZE_CURSOR));
                break;
            case SOUTHEAST:
                this.getRootPane().setCursor(Cursor.getPredefinedCursor(Cursor.SE_RESIZE_CURSOR));
                break;
            default:
                this.getRootPane().setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                break;
        }
    }

    public void mouseExited(MouseEvent e) {
        // Change back to default cursor
        this.getRootPane().setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }
}
